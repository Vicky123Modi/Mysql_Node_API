{"version":3,"sources":["config/seed.js"],"names":["seedDatabaseIfNeeded","config","seedDB","resolve","Thing","sqldb","promises","thingPromise","destroy","where","then","bulkCreate","name","info","console","log","catch","err","push","all"],"mappings":";;;;;;;;;;kBAQwBA,oB;;AAHxB;;;;AACA;;;;;;AANA;;;;;AAQe,SAASA,oBAAT,GAAgC;AAC3C,QAAG,CAACC,sBAAOC,MAAX,EAAmB;AACf,eAAO,kBAAQC,OAAR,EAAP;AACH;;AAED,QAAIC,QAAQC,gBAAMD,KAAlB;;AAEA,QAAIE,WAAW,EAAf;;AAEA,QAAIC,eAAeH,MAAMI,OAAN,CAAc,EAAEC,OAAO,EAAT,EAAd,EACdC,IADc,CACT,MAAMN,MAAMO,UAAN,CAAiB,CAAC;AAC1BC,cAAM,mBADoB;AAE1BC,cAAM,0GACI;AAHgB,KAAD,EAI1B;AACCD,cAAM,+BADP;AAECC,cAAM;AAFP,KAJ0B,EAO1B;AACCD,cAAM,oBADP;AAECC,cAAM,0GACI;AAHX,KAP0B,EAW1B;AACCD,cAAM,mBADP;AAECC,cAAM;AAFP,KAX0B,EAc1B;AACCD,cAAM,iBADP;AAECC,cAAM,yFACM;AAHb,KAd0B,EAkB1B;AACCD,cAAM,kBADP;AAECC,cAAM;AAFP,KAlB0B,CAAjB,CADG,EAuBdH,IAvBc,CAuBT,MAAMI,QAAQC,GAAR,CAAY,4BAAZ,CAvBG,EAwBdC,KAxBc,CAwBRC,OAAOH,QAAQC,GAAR,CAAY,yBAAZ,EAAuCE,GAAvC,CAxBC,CAAnB;AAyBAX,aAASY,IAAT,CAAcX,YAAd;;AAGA,WAAO,kBAAQY,GAAR,CAAYb,QAAZ,CAAP;AACH","file":"seed.js","sourcesContent":["/**\n * Populate DB with sample data on server start\n * to disable, edit config/environment/index.js, and set `seedDB: false`\n */\n\nimport sqldb from '../sqldb';\nimport config from './environment/';\n\nexport default function seedDatabaseIfNeeded() {\n    if(!config.seedDB) {\n        return Promise.resolve();\n    }\n\n    let Thing = sqldb.Thing;\n\n    let promises = [];\n\n    let thingPromise = Thing.destroy({ where: {} })\n        .then(() => Thing.bulkCreate([{\n            name: 'Development Tools',\n            info: 'Integration with popular tools such as Webpack, Babel, TypeScript, Karma, Mocha, ESLint, Protractor, '\n                    + 'Pug, Stylus, Sass, and Less.'\n        }, {\n            name: 'Server and Client integration',\n            info: 'Built with a powerful and fun stack: MongoDB, Express, Angular, and Node.'\n        }, {\n            name: 'Smart Build System',\n            info: 'Build system ignores `spec` files, allowing you to keep tests alongside code. Automatic injection of '\n                    + 'scripts and styles into your app.html'\n        }, {\n            name: 'Modular Structure',\n            info: 'Best practice client and server structures allow for more code reusability and maximum scalability'\n        }, {\n            name: 'Optimized Build',\n            info: 'Build process packs up your templates as a single JavaScript payload, minifies your '\n                      + 'scripts/css/images, and rewrites asset names for caching.'\n        }, {\n            name: 'Deployment Ready',\n            info: 'Easily deploy your app to Heroku or Openshift with the heroku and openshift subgenerators'\n        }]))\n        .then(() => console.log('finished populating things'))\n        .catch(err => console.log('error populating things', err));\n    promises.push(thingPromise);\n\n\n    return Promise.all(promises);\n}\n"]}